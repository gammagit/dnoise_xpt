mean(mu_pred_ii$two),
mean(mu_pred_ii$three))
ci_low <- c(ci_ii$one[1], ci_ii$two[1], ci_ii$three[1]) # lower confidence interval
ci_up <- c(ci_ii$one[2], ci_ii$two[2], ci_ii$three[2]) # upper confidence interval
df_ii <- data.frame(condition=snrs, rt = mean_rts, low = ci_low, up = ci_up, subject=rep(ixcount,3))
df_muii <- rbind(df_muii, df_ii)
ixcount <- ixcount + 1
}
df_muii$subject <- as.factor(df_muii$subject)
psub <- ggplot(df_muii, aes(x=condition, y=rt, group=subject)) +
geom_line(aes(color=subject), alpha=0.5) +
geom_errorbar(width=.1, aes(ymin=low, ymax=up, color=subject), alpha=0.4) +
geom_point(shape=21, size=3, fill="white", alpha=0.5) +
ggtitle(paste("Estimated mu for each participant")) +
ylab(expression(hat(mu))) +
xlab("Signal-to-noise ratio") +
ylim(500, 1500) +
scale_color_brewer(palette="Set1")
print(psub)
psub <- NULL # Plot handle
mu_pred_ii <- NULL
ixcount <- 1
ci_ii <- NULL
df_muii <- NULL
for (ii in subslist) {
# Bootstrap distribution of mean for each subject
mu_pred_ii$one <- extract(subfit$one, paste('mu_trans[',ixcount,']', sep=''))
mu_pred_ii$one <- unlist(mu_pred_ii$one, use.names=FALSE)
mu_pred_ii$two <- extract(subfit$two, paste('mu_trans[',ixcount,']', sep=''))
mu_pred_ii$two <- unlist(mu_pred_ii$two, use.names=FALSE)
mu_pred_ii$three <- extract(subfit$three, paste('mu_trans[',ixcount,']', sep=''))
mu_pred_ii$three <- unlist(mu_pred_ii$three, use.names=FALSE)
# Compute confidence intervals
ci_ii$one <- quantile(mu_pred_ii$one, c(0.025,0.975), names = FALSE)
ci_ii$two <- quantile(mu_pred_ii$two, c(0.025,0.975), names = FALSE)
ci_ii$three <- quantile(mu_pred_ii$three, c(0.025,0.975), names = FALSE)
# Plot means & confidence intervals
snrs <- c('1_low', '2_medium', '3_high') # signal-to-noise ratios for one, two & three
mean_rts <- c(mean(mu_pred_ii$one),
mean(mu_pred_ii$two),
mean(mu_pred_ii$three))
ci_low <- c(ci_ii$one[1], ci_ii$two[1], ci_ii$three[1]) # lower confidence interval
ci_up <- c(ci_ii$one[2], ci_ii$two[2], ci_ii$three[2]) # upper confidence interval
df_ii <- data.frame(condition=snrs, rt = mean_rts, low = ci_low, up = ci_up, subject=rep(ixcount,3))
df_muii <- rbind(df_muii, df_ii)
ixcount <- ixcount + 1
}
df_muii$subject <- as.factor(df_muii$subject)
psub <- ggplot(df_muii, aes(x=condition, y=rt, group=subject)) +
geom_line(aes(color=subject), alpha=0.5) +
geom_errorbar(width=.1, aes(ymin=low, ymax=up, color=subject), alpha=0.4) +
geom_point(shape=21, size=3, fill="white", alpha=0.5) +
ggtitle(paste("Estimated mu for each participant")) +
ylab(expression(hat(mu))) +
xlab("Signal-to-noise ratio") +
ylim(500, 1500)
print(psub)
psub <- NULL # Plot handle
mu_pred_ii <- NULL
ixcount <- 1
ci_ii <- NULL
df_muii <- NULL
for (ii in subslist) {
# Bootstrap distribution of mean for each subject
mu_pred_ii$one <- extract(subfit$one, paste('mu_trans[',ixcount,']', sep=''))
mu_pred_ii$one <- unlist(mu_pred_ii$one, use.names=FALSE)
mu_pred_ii$two <- extract(subfit$two, paste('mu_trans[',ixcount,']', sep=''))
mu_pred_ii$two <- unlist(mu_pred_ii$two, use.names=FALSE)
mu_pred_ii$three <- extract(subfit$three, paste('mu_trans[',ixcount,']', sep=''))
mu_pred_ii$three <- unlist(mu_pred_ii$three, use.names=FALSE)
# Compute confidence intervals
ci_ii$one <- quantile(mu_pred_ii$one, c(0.025,0.975), names = FALSE)
ci_ii$two <- quantile(mu_pred_ii$two, c(0.025,0.975), names = FALSE)
ci_ii$three <- quantile(mu_pred_ii$three, c(0.025,0.975), names = FALSE)
# Plot means & confidence intervals
snrs <- c('1_low', '2_medium', '3_high') # signal-to-noise ratios for one, two & three
mean_rts <- c(mean(mu_pred_ii$one),
mean(mu_pred_ii$two),
mean(mu_pred_ii$three))
ci_low <- c(ci_ii$one[1], ci_ii$two[1], ci_ii$three[1]) # lower confidence interval
ci_up <- c(ci_ii$one[2], ci_ii$two[2], ci_ii$three[2]) # upper confidence interval
df_ii <- data.frame(condition=snrs, rt = mean_rts, low = ci_low, up = ci_up, subject=rep(ixcount,3))
df_muii <- rbind(df_muii, df_ii)
ixcount <- ixcount + 1
}
df_muii$subject <- as.factor(df_muii$subject)
psub <- ggplot(df_muii, aes(x=condition, y=rt, group=subject)) +
geom_line(aes(color=subject), alpha=0.5) +
geom_errorbar(width=.1, aes(ymin=low, ymax=up, color=subject), alpha=0.4) +
geom_point(shape=21, size=3, fill="white", alpha=0.5) +
ggtitle(paste("Estimated mu for each participant")) +
ylab(expression(hat(mu))) +
xlab("Signal-to-noise ratio") +
ylim(500, 1500) +
scale_color_manual(values=c("#2b2d42", "#8d99ae", "#d90429", "#00962f",
"#ffcf35", "#11c1fe", "#3f339d", "#f6aacb",
"#dc8580", "#008989", "#ff9a00", "#bd00ff",
"#7a624f", "#e72a89", "#d3b6aa", "#280da1"))
print(psub)
test <- extract(subfit$one, paste('mu_trans[',5,']', sep=''))
mean(test)
test <- unlist(test, use.names=FALSE)
mean(test)
ci_test <- quantile(test, c(0.025,0.975), names = FALSE)
ci_test
psub <- NULL # Plot handle
mu_pred_ii <- NULL
ixcount <- 1
ci_ii <- NULL
df_muii <- NULL
for (ii in subslist) {
# Bootstrap distribution of mean for each subject
mu_pred_ii$one <- extract(subfit$one, paste('mu_trans[',ixcount,']', sep=''))
mu_pred_ii$one <- unlist(mu_pred_ii$one, use.names=FALSE)
mu_pred_ii$two <- extract(subfit$two, paste('mu_trans[',ixcount,']', sep=''))
mu_pred_ii$two <- unlist(mu_pred_ii$two, use.names=FALSE)
mu_pred_ii$three <- extract(subfit$three, paste('mu_trans[',ixcount,']', sep=''))
mu_pred_ii$three <- unlist(mu_pred_ii$three, use.names=FALSE)
# Compute confidence intervals
ci_ii$one <- quantile(mu_pred_ii$one, c(0.025,0.975), names = FALSE)
ci_ii$two <- quantile(mu_pred_ii$two, c(0.025,0.975), names = FALSE)
ci_ii$three <- quantile(mu_pred_ii$three, c(0.025,0.975), names = FALSE)
# Plot means & confidence intervals
snrs <- c('1_low', '2_medium', '3_high') # signal-to-noise ratios for one, two & three
mean_rts <- c(mean(mu_pred_ii$one),
mean(mu_pred_ii$two),
mean(mu_pred_ii$three))
ci_low <- c(ci_ii$one[1], ci_ii$two[1], ci_ii$three[1]) # lower confidence interval
ci_up <- c(ci_ii$one[2], ci_ii$two[2], ci_ii$three[2]) # upper confidence interval
df_ii <- data.frame(condition=snrs, rt = mean_rts, low = ci_low, up = ci_up, subject=rep(ixcount,3))
df_muii <- rbind(df_muii, df_ii)
ixcount <- ixcount + 1
}
df_muii$subject <- as.factor(df_muii$subject)
psub <- ggplot(df_muii, aes(x=condition, y=rt, group=subject)) +
geom_line(aes(color=subject), alpha=0.5) +
geom_errorbar(width=.1, aes(ymin=low, ymax=up, color=subject), alpha=0.4) +
geom_point(shape=21, size=3, fill="white", alpha=0.5) +
ggtitle(paste("Estimated mu for each participant")) +
ylab(expression(hat(mu))) +
xlab("Signal-to-noise ratio") +
ylim(500, 1600) +
scale_color_manual(values=c("#2b2d42", "#8d99ae", "#d90429", "#00962f",
"#ffcf35", "#11c1fe", "#3f339d", "#f6aacb",
"#dc8580", "#008989", "#ff9a00", "#bd00ff",
"#7a624f", "#e72a89", "#d3b6aa", "#280da1"))
print(psub)
psub <- NULL # Plot handle
mu_pred_ii <- NULL
ixcount <- 1
ci_ii <- NULL
df_muii <- NULL
for (ii in subslist) {
# Bootstrap distribution of mean for each subject
mu_pred_ii$one <- extract(subfit$one, paste('mu_trans[',ixcount,']', sep=''))
mu_pred_ii$one <- unlist(mu_pred_ii$one, use.names=FALSE)
mu_pred_ii$two <- extract(subfit$two, paste('mu_trans[',ixcount,']', sep=''))
mu_pred_ii$two <- unlist(mu_pred_ii$two, use.names=FALSE)
mu_pred_ii$three <- extract(subfit$three, paste('mu_trans[',ixcount,']', sep=''))
mu_pred_ii$three <- unlist(mu_pred_ii$three, use.names=FALSE)
# Compute confidence intervals
ci_ii$one <- quantile(mu_pred_ii$one, c(0.025,0.975), names = FALSE)
ci_ii$two <- quantile(mu_pred_ii$two, c(0.025,0.975), names = FALSE)
ci_ii$three <- quantile(mu_pred_ii$three, c(0.025,0.975), names = FALSE)
# Plot means & confidence intervals
snrs <- c('1_low', '2_medium', '3_high') # signal-to-noise ratios for one, two & three
mean_rts <- c(mean(mu_pred_ii$one),
mean(mu_pred_ii$two),
mean(mu_pred_ii$three))
ci_low <- c(ci_ii$one[1], ci_ii$two[1], ci_ii$three[1]) # lower confidence interval
ci_up <- c(ci_ii$one[2], ci_ii$two[2], ci_ii$three[2]) # upper confidence interval
df_ii <- data.frame(condition=snrs, rt = mean_rts, low = ci_low, up = ci_up, subject=rep(ixcount,3))
df_muii <- rbind(df_muii, df_ii)
ixcount <- ixcount + 1
}
df_muii$subject <- as.factor(df_muii$subject)
psub <- ggplot(df_muii, aes(x=condition, y=rt, group=subject)) +
geom_line(aes(color=subject), alpha=0.5) +
geom_errorbar(width=.1, aes(ymin=low, ymax=up, color=subject), alpha=0.4) +
geom_point(shape=21, size=3, fill="white", alpha=0.5) +
ggtitle(paste("Estimated mu for each participant")) +
ylab(expression(hat(mu))) +
xlab("Signal-to-noise ratio") +
ylim(500, 1600) +
scale_color_manual(values=c("#2b2d42", "#8d99ae", "#d90429", "#00962f",
"#ffcf35", "#11c1fe", "#3f339d", "#f6aacb",
"#dc8580", "#008989", "#ff9a00", "#bd00ff",
"#7a624f", "#e72a89", "#d3b6aa", "#280da1")) +
theme_bw()
print(psub)
psub <- NULL # Plot handle
mu_pred_ii <- NULL
ixcount <- 1
ci_ii <- NULL
df_muii <- NULL
for (ii in subslist) {
# Bootstrap distribution of mean for each subject
mu_pred_ii$one <- extract(subfit$one, paste('mu_trans[',ixcount,']', sep=''))
mu_pred_ii$one <- unlist(mu_pred_ii$one, use.names=FALSE)
mu_pred_ii$two <- extract(subfit$two, paste('mu_trans[',ixcount,']', sep=''))
mu_pred_ii$two <- unlist(mu_pred_ii$two, use.names=FALSE)
mu_pred_ii$three <- extract(subfit$three, paste('mu_trans[',ixcount,']', sep=''))
mu_pred_ii$three <- unlist(mu_pred_ii$three, use.names=FALSE)
# Compute confidence intervals
ci_ii$one <- quantile(mu_pred_ii$one, c(0.025,0.975), names = FALSE)
ci_ii$two <- quantile(mu_pred_ii$two, c(0.025,0.975), names = FALSE)
ci_ii$three <- quantile(mu_pred_ii$three, c(0.025,0.975), names = FALSE)
# Plot means & confidence intervals
snrs <- c('1_low', '2_medium', '3_high') # signal-to-noise ratios for one, two & three
mean_rts <- c(mean(mu_pred_ii$one),
mean(mu_pred_ii$two),
mean(mu_pred_ii$three))
ci_low <- c(ci_ii$one[1], ci_ii$two[1], ci_ii$three[1]) # lower confidence interval
ci_up <- c(ci_ii$one[2], ci_ii$two[2], ci_ii$three[2]) # upper confidence interval
df_ii <- data.frame(condition=snrs, rt = mean_rts, low = ci_low, up = ci_up, subject=rep(ixcount,3))
df_muii <- rbind(df_muii, df_ii)
ixcount <- ixcount + 1
}
df_muii$subject <- as.factor(df_muii$subject)
psub <- ggplot(df_muii, aes(x=condition, y=rt, group=subject)) +
geom_line(aes(color=subject), alpha=0.5) +
geom_errorbar(width=.1, aes(ymin=low, ymax=up, color=subject), alpha=0.4) +
geom_point(shape=21, size=3, fill="white", alpha=0.5) +
ggtitle(paste("Estimated mu for each participant")) +
ylab(expression(hat(mu))) +
xlab("Signal-to-noise ratio") +
ylim(500, 1600) +
scale_color_manual(values=c("#2b2d42", "#8d99ae", "#d90429", "#00962f",
"#ff420e", "#11c1fe", "#3f339d", "#f6aacb",
"#dc8580", "#008989", "#ff9a00", "#bd00ff",
"#7a624f", "#e72a89", "#d3b6aa", "#280da1")) +
theme_bw()
print(psub)
psub <- NULL # Plot handle
mu_pred_ii <- NULL
ixcount <- 1
ci_ii <- NULL
df_muii <- NULL
for (ii in subslist) {
# Bootstrap distribution of mean for each subject
mu_pred_ii$one <- extract(subfit$one, paste('mu_trans[',ixcount,']', sep=''))
mu_pred_ii$one <- unlist(mu_pred_ii$one, use.names=FALSE)
mu_pred_ii$two <- extract(subfit$two, paste('mu_trans[',ixcount,']', sep=''))
mu_pred_ii$two <- unlist(mu_pred_ii$two, use.names=FALSE)
mu_pred_ii$three <- extract(subfit$three, paste('mu_trans[',ixcount,']', sep=''))
mu_pred_ii$three <- unlist(mu_pred_ii$three, use.names=FALSE)
# Compute confidence intervals
ci_ii$one <- quantile(mu_pred_ii$one, c(0.025,0.975), names = FALSE)
ci_ii$two <- quantile(mu_pred_ii$two, c(0.025,0.975), names = FALSE)
ci_ii$three <- quantile(mu_pred_ii$three, c(0.025,0.975), names = FALSE)
# Plot means & confidence intervals
snrs <- c('1_low', '2_medium', '3_high') # signal-to-noise ratios for one, two & three
mean_rts <- c(mean(mu_pred_ii$one),
mean(mu_pred_ii$two),
mean(mu_pred_ii$three))
ci_low <- c(ci_ii$one[1], ci_ii$two[1], ci_ii$three[1]) # lower confidence interval
ci_up <- c(ci_ii$one[2], ci_ii$two[2], ci_ii$three[2]) # upper confidence interval
df_ii <- data.frame(condition=snrs, rt = mean_rts, low = ci_low, up = ci_up, subject=rep(ixcount,3))
df_muii <- rbind(df_muii, df_ii)
ixcount <- ixcount + 1
}
df_muii$subject <- as.factor(df_muii$subject)
pd <- position_dodge(width=0.4)
psub <- ggplot(df_muii, aes(x=condition, y=rt, group=subject)) +
geom_line(aes(color=subject), position=pd, alpha=0.5) +
geom_errorbar(width=.1, aes(ymin=low, ymax=up, color=subject), position=pd, alpha=0.4) +
geom_point(shape=21, size=3, fill="white", position=pdd, alpha=0.5) +
ggtitle(paste("Estimated mu for each participant")) +
ylab(expression(hat(mu))) +
xlab("Signal-to-noise ratio") +
ylim(600, 1600) +
scale_color_manual(values=c("#2b2d42", "#8d99ae", "#d90429", "#00962f",
"#ff420e", "#11c1fe", "#3f339d", "#f6aacb",
"#dc8580", "#008989", "#ff9a00", "#bd00ff",
"#7a624f", "#e72a89", "#d3b6aa", "#280da1")) +
theme_bw()
psub <- NULL # Plot handle
mu_pred_ii <- NULL
ixcount <- 1
ci_ii <- NULL
df_muii <- NULL
for (ii in subslist) {
# Bootstrap distribution of mean for each subject
mu_pred_ii$one <- extract(subfit$one, paste('mu_trans[',ixcount,']', sep=''))
mu_pred_ii$one <- unlist(mu_pred_ii$one, use.names=FALSE)
mu_pred_ii$two <- extract(subfit$two, paste('mu_trans[',ixcount,']', sep=''))
mu_pred_ii$two <- unlist(mu_pred_ii$two, use.names=FALSE)
mu_pred_ii$three <- extract(subfit$three, paste('mu_trans[',ixcount,']', sep=''))
mu_pred_ii$three <- unlist(mu_pred_ii$three, use.names=FALSE)
# Compute confidence intervals
ci_ii$one <- quantile(mu_pred_ii$one, c(0.025,0.975), names = FALSE)
ci_ii$two <- quantile(mu_pred_ii$two, c(0.025,0.975), names = FALSE)
ci_ii$three <- quantile(mu_pred_ii$three, c(0.025,0.975), names = FALSE)
# Plot means & confidence intervals
snrs <- c('1_low', '2_medium', '3_high') # signal-to-noise ratios for one, two & three
mean_rts <- c(mean(mu_pred_ii$one),
mean(mu_pred_ii$two),
mean(mu_pred_ii$three))
ci_low <- c(ci_ii$one[1], ci_ii$two[1], ci_ii$three[1]) # lower confidence interval
ci_up <- c(ci_ii$one[2], ci_ii$two[2], ci_ii$three[2]) # upper confidence interval
df_ii <- data.frame(condition=snrs, rt = mean_rts, low = ci_low, up = ci_up, subject=rep(ixcount,3))
df_muii <- rbind(df_muii, df_ii)
ixcount <- ixcount + 1
}
df_muii$subject <- as.factor(df_muii$subject)
pd <- position_dodge(width=0.4)
psub <- ggplot(df_muii, aes(x=condition, y=rt, group=subject)) +
geom_line(aes(color=subject), position=pd, alpha=0.5) +
geom_errorbar(width=.1, aes(ymin=low, ymax=up, color=subject), position=pd, alpha=0.4) +
geom_point(shape=21, size=3, fill="white", position=pd, alpha=0.5) +
ggtitle(paste("Estimated mu for each participant")) +
ylab(expression(hat(mu))) +
xlab("Signal-to-noise ratio") +
ylim(600, 1600) +
scale_color_manual(values=c("#2b2d42", "#8d99ae", "#d90429", "#00962f",
"#ff420e", "#11c1fe", "#3f339d", "#f6aacb",
"#dc8580", "#008989", "#ff9a00", "#bd00ff",
"#7a624f", "#e72a89", "#d3b6aa", "#280da1")) +
theme_bw()
print(psub)
psub <- NULL # Plot handle
mu_pred_ii <- NULL
ixcount <- 1
ci_ii <- NULL
df_muii <- NULL
for (ii in subslist) {
# Bootstrap distribution of mean for each subject
mu_pred_ii$one <- extract(subfit$one, paste('mu_trans[',ixcount,']', sep=''))
mu_pred_ii$one <- unlist(mu_pred_ii$one, use.names=FALSE)
mu_pred_ii$two <- extract(subfit$two, paste('mu_trans[',ixcount,']', sep=''))
mu_pred_ii$two <- unlist(mu_pred_ii$two, use.names=FALSE)
mu_pred_ii$three <- extract(subfit$three, paste('mu_trans[',ixcount,']', sep=''))
mu_pred_ii$three <- unlist(mu_pred_ii$three, use.names=FALSE)
# Compute confidence intervals
ci_ii$one <- quantile(mu_pred_ii$one, c(0.025,0.975), names = FALSE)
ci_ii$two <- quantile(mu_pred_ii$two, c(0.025,0.975), names = FALSE)
ci_ii$three <- quantile(mu_pred_ii$three, c(0.025,0.975), names = FALSE)
# Plot means & confidence intervals
snrs <- c('1_low', '2_medium', '3_high') # signal-to-noise ratios for one, two & three
mean_rts <- c(mean(mu_pred_ii$one),
mean(mu_pred_ii$two),
mean(mu_pred_ii$three))
ci_low <- c(ci_ii$one[1], ci_ii$two[1], ci_ii$three[1]) # lower confidence interval
ci_up <- c(ci_ii$one[2], ci_ii$two[2], ci_ii$three[2]) # upper confidence interval
df_ii <- data.frame(condition=snrs, rt = mean_rts, low = ci_low, up = ci_up, subject=rep(ixcount,3))
df_muii <- rbind(df_muii, df_ii)
ixcount <- ixcount + 1
}
df_muii$subject <- as.factor(df_muii$subject)
pd <- position_dodge(width=0.1)
psub <- ggplot(df_muii, aes(x=condition, y=rt, group=subject)) +
geom_line(aes(color=subject), position=pd, alpha=0.5) +
geom_errorbar(width=.1, aes(ymin=low, ymax=up, color=subject), alpha=0.4) +
geom_point(shape=21, size=3, fill="white", position=pd, alpha=0.5) +
ggtitle(paste("Estimated mu for each participant")) +
ylab(expression(hat(mu))) +
xlab("Signal-to-noise ratio") +
ylim(600, 1600) +
scale_color_manual(values=c("#2b2d42", "#8d99ae", "#d90429", "#00962f",
"#ff420e", "#11c1fe", "#3f339d", "#f6aacb",
"#dc8580", "#008989", "#ff9a00", "#bd00ff",
"#7a624f", "#e72a89", "#d3b6aa", "#280da1")) +
theme_bw()
print(psub)
psub <- NULL # Plot handle
mu_pred_ii <- NULL
ixcount <- 1
ci_ii <- NULL
df_muii <- NULL
for (ii in subslist) {
# Bootstrap distribution of mean for each subject
mu_pred_ii$one <- extract(subfit$one, paste('mu_trans[',ixcount,']', sep=''))
mu_pred_ii$one <- unlist(mu_pred_ii$one, use.names=FALSE)
mu_pred_ii$two <- extract(subfit$two, paste('mu_trans[',ixcount,']', sep=''))
mu_pred_ii$two <- unlist(mu_pred_ii$two, use.names=FALSE)
mu_pred_ii$three <- extract(subfit$three, paste('mu_trans[',ixcount,']', sep=''))
mu_pred_ii$three <- unlist(mu_pred_ii$three, use.names=FALSE)
# Compute confidence intervals
ci_ii$one <- quantile(mu_pred_ii$one, c(0.025,0.975), names = FALSE)
ci_ii$two <- quantile(mu_pred_ii$two, c(0.025,0.975), names = FALSE)
ci_ii$three <- quantile(mu_pred_ii$three, c(0.025,0.975), names = FALSE)
# Plot means & confidence intervals
snrs <- c('1_low', '2_medium', '3_high') # signal-to-noise ratios for one, two & three
mean_rts <- c(mean(mu_pred_ii$one),
mean(mu_pred_ii$two),
mean(mu_pred_ii$three))
ci_low <- c(ci_ii$one[1], ci_ii$two[1], ci_ii$three[1]) # lower confidence interval
ci_up <- c(ci_ii$one[2], ci_ii$two[2], ci_ii$three[2]) # upper confidence interval
df_ii <- data.frame(condition=snrs, rt = mean_rts, low = ci_low, up = ci_up, subject=rep(ixcount,3))
df_muii <- rbind(df_muii, df_ii)
ixcount <- ixcount + 1
}
df_muii$subject <- as.factor(df_muii$subject)
pd <- position_dodge(width=0.1)
psub <- ggplot(df_muii, aes(x=condition, y=rt, group=subject)) +
geom_line(aes(color=subject), position=pd, alpha=0.5) +
geom_errorbar(width=.1, aes(ymin=low, ymax=up, color=subject), position=pd, alpha=0.4) +
geom_point(shape=21, size=3, fill="white", position=pd, alpha=0.5) +
ggtitle(paste("Estimated mu for each participant")) +
ylab(expression(hat(mu))) +
xlab("Signal-to-noise ratio") +
ylim(600, 1600) +
scale_color_manual(values=c("#2b2d42", "#8d99ae", "#d90429", "#00962f",
"#ff420e", "#11c1fe", "#3f339d", "#f6aacb",
"#dc8580", "#008989", "#ff9a00", "#bd00ff",
"#7a624f", "#e72a89", "#d3b6aa", "#280da1")) +
theme_bw()
print(psub)
psub <- NULL # Plot handle
mu_pred_ii <- NULL
ixcount <- 1
ci_ii <- NULL
df_muii <- NULL
for (ii in subslist) {
# Bootstrap distribution of mean for each subject
mu_pred_ii$one <- extract(subfit$one, paste('mu_trans[',ixcount,']', sep=''))
mu_pred_ii$one <- unlist(mu_pred_ii$one, use.names=FALSE)
mu_pred_ii$two <- extract(subfit$two, paste('mu_trans[',ixcount,']', sep=''))
mu_pred_ii$two <- unlist(mu_pred_ii$two, use.names=FALSE)
mu_pred_ii$three <- extract(subfit$three, paste('mu_trans[',ixcount,']', sep=''))
mu_pred_ii$three <- unlist(mu_pred_ii$three, use.names=FALSE)
# Compute confidence intervals
ci_ii$one <- quantile(mu_pred_ii$one, c(0.025,0.975), names = FALSE)
ci_ii$two <- quantile(mu_pred_ii$two, c(0.025,0.975), names = FALSE)
ci_ii$three <- quantile(mu_pred_ii$three, c(0.025,0.975), names = FALSE)
# Plot means & confidence intervals
snrs <- c('1_low', '2_medium', '3_high') # signal-to-noise ratios for one, two & three
mean_rts <- c(mean(mu_pred_ii$one),
mean(mu_pred_ii$two),
mean(mu_pred_ii$three))
ci_low <- c(ci_ii$one[1], ci_ii$two[1], ci_ii$three[1]) # lower confidence interval
ci_up <- c(ci_ii$one[2], ci_ii$two[2], ci_ii$three[2]) # upper confidence interval
df_ii <- data.frame(condition=snrs, rt = mean_rts, low = ci_low, up = ci_up, subject=rep(ixcount,3))
df_muii <- rbind(df_muii, df_ii)
ixcount <- ixcount + 1
}
df_muii$subject <- as.factor(df_muii$subject)
pd <- position_dodge(width=0.1)
psub <- ggplot(df_muii, aes(x=condition, y=rt, group=subject)) +
geom_line(aes(color=subject), position=pd, alpha=0.7) +
geom_errorbar(width=.1, aes(ymin=low, ymax=up, color=subject), position=pd, alpha=0.7) +
geom_point(shape=21, size=3, fill="white", position=pd, alpha=0.7) +
ggtitle(paste("Estimated mu for each participant")) +
ylab(expression(hat(mu))) +
xlab("Signal-to-noise ratio") +
ylim(600, 1600) +
scale_color_manual(values=c("#2b2d42", "#8d99ae", "#d90429", "#00962f",
"#ff420e", "#11c1fe", "#3f339d", "#f6aacb",
"#dc8580", "#008989", "#ff9a00", "#bd00ff",
"#7a624f", "#e72a89", "#d3b6aa", "#280da1")) +
theme_bw()
print(psub)
mu_mu_pred <- NULL
mu_mu_pred$one <- extract(subfit$one, 'group_mu_mu')
mu_mu_pred$one <- unlist(mu_mu_pred$one, use.names=FALSE)
mu_mu_pred$two <- extract(subfit$two, 'group_mu_mu')
mu_mu_pred$two <- unlist(mu_mu_pred$two, use.names=FALSE)
mu_mu_pred$three <- extract(subfit$three, 'group_mu_mu')
mu_mu_pred$three <- unlist(mu_mu_pred$three, use.names=FALSE)
# Compute confidence intervals
ci <- NULL
ci$one <- quantile(mu_mu_pred$one, c(0.025,0.975), names = FALSE)
ci$two <- quantile(mu_mu_pred$two, c(0.025,0.975), names = FALSE)
ci$three <- quantile(mu_mu_pred$three, c(0.025,0.975), names = FALSE)
# Plot means & confidence intervals
snrs <- c('1_low', '2_medium', '3_high') # signal-to-noise ratios for one, two & three
mean_rts <- c(mean(mu_mu_pred$one),
mean(mu_mu_pred$two),
mean(mu_mu_pred$three))
ci_low <- c(ci$one[1], ci$two[1], ci$three[1]) # lower confidence interval
ci_up <- c(ci$one[2], ci$two[2], ci$three[2]) # upper confidence interval
df_mu_mu <- data.frame(condition=snrs, rt = mean_rts, low = ci_low, up = ci_up)
pmu_mu <- ggplot(df_mu_mu, aes(x=condition, y=rt, group=1)) +
geom_line(color=1, alpha=0.7) +
geom_errorbar(data=df_mu_mu, width=.1, aes(ymin=low, ymax=up), color=1) +
geom_point(shape=21, size=3, fill="white") +
ggtitle("Estimated mu for group") +
ylab(expression(hat(mu))) +
xlab("Signal-to-noise ratio") +
ylim(600, 1600)
print(pmu_mu)
mu_mu_pred <- NULL
mu_mu_pred$one <- extract(subfit$one, 'group_mu_mu')
mu_mu_pred$one <- unlist(mu_mu_pred$one, use.names=FALSE)
mu_mu_pred$two <- extract(subfit$two, 'group_mu_mu')
mu_mu_pred$two <- unlist(mu_mu_pred$two, use.names=FALSE)
mu_mu_pred$three <- extract(subfit$three, 'group_mu_mu')
mu_mu_pred$three <- unlist(mu_mu_pred$three, use.names=FALSE)
# Compute confidence intervals
ci <- NULL
ci$one <- quantile(mu_mu_pred$one, c(0.025,0.975), names = FALSE)
ci$two <- quantile(mu_mu_pred$two, c(0.025,0.975), names = FALSE)
ci$three <- quantile(mu_mu_pred$three, c(0.025,0.975), names = FALSE)
# Plot means & confidence intervals
snrs <- c('1_low', '2_medium', '3_high') # signal-to-noise ratios for one, two & three
mean_rts <- c(mean(mu_mu_pred$one),
mean(mu_mu_pred$two),
mean(mu_mu_pred$three))
ci_low <- c(ci$one[1], ci$two[1], ci$three[1]) # lower confidence interval
ci_up <- c(ci$one[2], ci$two[2], ci$three[2]) # upper confidence interval
df_mu_mu <- data.frame(condition=snrs, rt = mean_rts, low = ci_low, up = ci_up)
pmu_mu <- ggplot(df_mu_mu, aes(x=condition, y=rt, group=1)) +
geom_line(color=1, alpha=0.7) +
geom_errorbar(data=df_mu_mu, width=.1, aes(ymin=low, ymax=up), color=1) +
geom_point(shape=21, size=3, fill="white") +
ggtitle("Estimated mu for group") +
ylab(expression(hat(mu))) +
xlab("Signal-to-noise ratio") +
ylim(600, 1600) +
theme_bw()
print(pmu_mu)
q()
